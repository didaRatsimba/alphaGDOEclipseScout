/**
 * 
 */
package mg.alpha.gestion.operations.shared.ui.desktop.outlines.pages.forms.operations;

import java.math.BigDecimal;
import java.util.Map;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class SelectionnerDonneesFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public SelectionnerDonneesFormData() {
  }

  /**
   * access method for property BeneficeParAchatId.
   */
  public Map<Long, BigDecimal> getBeneficeParAchatId() {
    return getBeneficeParAchatIdProperty().getValue();
  }

  /**
   * access method for property BeneficeParAchatId.
   */
  public void setBeneficeParAchatId(Map<Long, BigDecimal> beneficeParAchatId) {
    getBeneficeParAchatIdProperty().setValue(beneficeParAchatId);
  }

  public BeneficeParAchatIdProperty getBeneficeParAchatIdProperty() {
    return getPropertyByClass(BeneficeParAchatIdProperty.class);
  }

  public ComptesParticuliers getComptesParticuliers() {
    return getFieldByClass(ComptesParticuliers.class);
  }

  /**
   * access method for property CoursChange.
   */
  public BigDecimal getCoursChange() {
    return getCoursChangeProperty().getValue();
  }

  /**
   * access method for property CoursChange.
   */
  public void setCoursChange(BigDecimal coursChange) {
    getCoursChangeProperty().setValue(coursChange);
  }

  public CoursChangeProperty getCoursChangeProperty() {
    return getPropertyByClass(CoursChangeProperty.class);
  }

  /**
   * access method for property DebitParOperationIdMap.
   */
  public Map<Long, BigDecimal> getDebitParOperationIdMap() {
    return getDebitParOperationIdMapProperty().getValue();
  }

  /**
   * access method for property DebitParOperationIdMap.
   */
  public void setDebitParOperationIdMap(Map<Long, BigDecimal> debitParOperationIdMap) {
    getDebitParOperationIdMapProperty().setValue(debitParOperationIdMap);
  }

  public DebitParOperationIdMapProperty getDebitParOperationIdMapProperty() {
    return getPropertyByClass(DebitParOperationIdMapProperty.class);
  }

  public DonneesFiltrees getDonneesFiltrees() {
    return getFieldByClass(DonneesFiltrees.class);
  }

  /**
   * access method for property SelectionnerDonneesNr.
   */
  public Long getSelectionnerDonneesNr() {
    return getSelectionnerDonneesNrProperty().getValue();
  }

  /**
   * access method for property SelectionnerDonneesNr.
   */
  public void setSelectionnerDonneesNr(Long selectionnerDonneesNr) {
    getSelectionnerDonneesNrProperty().setValue(selectionnerDonneesNr);
  }

  public SelectionnerDonneesNrProperty getSelectionnerDonneesNrProperty() {
    return getPropertyByClass(SelectionnerDonneesNrProperty.class);
  }

  public SommeACompleter getSommeACompleter() {
    return getFieldByClass(SommeACompleter.class);
  }

  /**
   * access method for property SommeAPartagerParCompteIdMap.
   */
  public Map<Long, BigDecimal> getSommeAPartagerParCompteIdMap() {
    return getSommeAPartagerParCompteIdMapProperty().getValue();
  }

  /**
   * access method for property SommeAPartagerParCompteIdMap.
   */
  public void setSommeAPartagerParCompteIdMap(Map<Long, BigDecimal> sommeAPartagerParCompteIdMap) {
    getSommeAPartagerParCompteIdMapProperty().setValue(sommeAPartagerParCompteIdMap);
  }

  public SommeAPartagerParCompteIdMapProperty getSommeAPartagerParCompteIdMapProperty() {
    return getPropertyByClass(SommeAPartagerParCompteIdMapProperty.class);
  }

  /**
   * access method for property SommeAVendre.
   */
  public BigDecimal getSommeAVendre() {
    return getSommeAVendreProperty().getValue();
  }

  /**
   * access method for property SommeAVendre.
   */
  public void setSommeAVendre(BigDecimal sommeAVendre) {
    getSommeAVendreProperty().setValue(sommeAVendre);
  }

  public SommeAVendreProperty getSommeAVendreProperty() {
    return getPropertyByClass(SommeAVendreProperty.class);
  }

  public SommeManquante getSommeManquante() {
    return getFieldByClass(SommeManquante.class);
  }

  public static class BeneficeParAchatIdProperty extends AbstractPropertyData<Map<Long, BigDecimal>> {

    private static final long serialVersionUID = 1L;

    public BeneficeParAchatIdProperty() {
    }
  }

  public static class ComptesParticuliers extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    public ComptesParticuliers() {
    }

    @Override
    public ComptesParticuliersRowData addRow() {
      return (ComptesParticuliersRowData) super.addRow();
    }

    @Override
    public ComptesParticuliersRowData addRow(int rowState) {
      return (ComptesParticuliersRowData) super.addRow(rowState);
    }

    @Override
    public ComptesParticuliersRowData createRow() {
      return new ComptesParticuliersRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return ComptesParticuliersRowData.class;
    }

    @Override
    public ComptesParticuliersRowData[] getRows() {
      return (ComptesParticuliersRowData[]) super.getRows();
    }

    @Override
    public ComptesParticuliersRowData rowAt(int index) {
      return (ComptesParticuliersRowData) super.rowAt(index);
    }

    public void setRows(ComptesParticuliersRowData[] rows) {
      super.setRows(rows);
    }

    public static class ComptesParticuliersRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String compteParticulierId = "compteParticulierId";
      public static final String compteParticulier = "compteParticulier";
      public static final String sommeAEnvoyer = "sommeAEnvoyer";
      private Long m_compteParticulierId;
      private String m_compteParticulier;
      private BigDecimal m_sommeAEnvoyer;

      public ComptesParticuliersRowData() {
      }

      /**
       * @return the CompteParticulierId
       */
      public Long getCompteParticulierId() {
        return m_compteParticulierId;
      }

      /**
       * @param compteParticulierId
       *          the CompteParticulierId to set
       */
      public void setCompteParticulierId(Long compteParticulierId) {
        m_compteParticulierId = compteParticulierId;
      }

      /**
       * @return the CompteParticulier
       */
      public String getCompteParticulier() {
        return m_compteParticulier;
      }

      /**
       * @param compteParticulier
       *          the CompteParticulier to set
       */
      public void setCompteParticulier(String compteParticulier) {
        m_compteParticulier = compteParticulier;
      }

      /**
       * @return the SommeAEnvoyer
       */
      public BigDecimal getSommeAEnvoyer() {
        return m_sommeAEnvoyer;
      }

      /**
       * @param sommeAEnvoyer
       *          the SommeAEnvoyer to set
       */
      public void setSommeAEnvoyer(BigDecimal sommeAEnvoyer) {
        m_sommeAEnvoyer = sommeAEnvoyer;
      }
    }
  }

  public static class CoursChangeProperty extends AbstractPropertyData<BigDecimal> {

    private static final long serialVersionUID = 1L;

    public CoursChangeProperty() {
    }
  }

  public static class DebitParOperationIdMapProperty extends AbstractPropertyData<Map<Long, BigDecimal>> {

    private static final long serialVersionUID = 1L;

    public DebitParOperationIdMapProperty() {
    }
  }

  public static class DonneesFiltrees extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    public DonneesFiltrees() {
    }

    @Override
    public DonneesFiltreesRowData addRow() {
      return (DonneesFiltreesRowData) super.addRow();
    }

    @Override
    public DonneesFiltreesRowData addRow(int rowState) {
      return (DonneesFiltreesRowData) super.addRow(rowState);
    }

    @Override
    public DonneesFiltreesRowData createRow() {
      return new DonneesFiltreesRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return DonneesFiltreesRowData.class;
    }

    @Override
    public DonneesFiltreesRowData[] getRows() {
      return (DonneesFiltreesRowData[]) super.getRows();
    }

    @Override
    public DonneesFiltreesRowData rowAt(int index) {
      return (DonneesFiltreesRowData) super.rowAt(index);
    }

    public void setRows(DonneesFiltreesRowData[] rows) {
      super.setRows(rows);
    }

    public static class DonneesFiltreesRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String achatId = "achatId";
      public static final String comptes = "comptes";
      public static final String valeurAchat = "valeurAchat";
      public static final String montantDisponible = "montantDisponible";
      public static final String montantADebiter = "montantADebiter";
      public static final String benefice = "benefice";
      private Long m_achatId;
      private String m_comptes;
      private BigDecimal m_valeurAchat;
      private BigDecimal m_montantDisponible;
      private BigDecimal m_montantADebiter;
      private BigDecimal m_benefice;

      public DonneesFiltreesRowData() {
      }

      /**
       * @return the AchatId
       */
      public Long getAchatId() {
        return m_achatId;
      }

      /**
       * @param achatId
       *          the AchatId to set
       */
      public void setAchatId(Long achatId) {
        m_achatId = achatId;
      }

      /**
       * @return the Comptes
       */
      public String getComptes() {
        return m_comptes;
      }

      /**
       * @param comptes
       *          the Comptes to set
       */
      public void setComptes(String comptes) {
        m_comptes = comptes;
      }

      /**
       * @return the ValeurAchat
       */
      public BigDecimal getValeurAchat() {
        return m_valeurAchat;
      }

      /**
       * @param valeurAchat
       *          the ValeurAchat to set
       */
      public void setValeurAchat(BigDecimal valeurAchat) {
        m_valeurAchat = valeurAchat;
      }

      /**
       * @return the MontantDisponible
       */
      public BigDecimal getMontantDisponible() {
        return m_montantDisponible;
      }

      /**
       * @param montantDisponible
       *          the MontantDisponible to set
       */
      public void setMontantDisponible(BigDecimal montantDisponible) {
        m_montantDisponible = montantDisponible;
      }

      /**
       * @return the MontantADebiter
       */
      public BigDecimal getMontantADebiter() {
        return m_montantADebiter;
      }

      /**
       * @param montantADebiter
       *          the MontantADebiter to set
       */
      public void setMontantADebiter(BigDecimal montantADebiter) {
        m_montantADebiter = montantADebiter;
      }

      /**
       * @return the Benefice
       */
      public BigDecimal getBenefice() {
        return m_benefice;
      }

      /**
       * @param benefice
       *          the Benefice to set
       */
      public void setBenefice(BigDecimal benefice) {
        m_benefice = benefice;
      }
    }
  }

  public static class SelectionnerDonneesNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;

    public SelectionnerDonneesNrProperty() {
    }
  }

  public static class SommeACompleter extends AbstractValueFieldData<BigDecimal> {

    private static final long serialVersionUID = 1L;

    public SommeACompleter() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_VALUE, new BigDecimal("999999999999999999999999999999999999999999999999999999999999"));
      ruleMap.put(ValidationRule.MIN_VALUE, new BigDecimal("-999999999999999999999999999999999999999999999999999999999999"));
    }
  }

  public static class SommeAPartagerParCompteIdMapProperty extends AbstractPropertyData<Map<Long, BigDecimal>> {

    private static final long serialVersionUID = 1L;

    public SommeAPartagerParCompteIdMapProperty() {
    }
  }

  public static class SommeAVendreProperty extends AbstractPropertyData<BigDecimal> {

    private static final long serialVersionUID = 1L;

    public SommeAVendreProperty() {
    }
  }

  public static class SommeManquante extends AbstractValueFieldData<BigDecimal> {

    private static final long serialVersionUID = 1L;

    public SommeManquante() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_VALUE, new BigDecimal("999999999999999999999999999999999999999999999999999999999999"));
      ruleMap.put(ValidationRule.MIN_VALUE, new BigDecimal("-999999999999999999999999999999999999999999999999999999999999"));
    }
  }
}