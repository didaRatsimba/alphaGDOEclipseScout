/**
 * 
 */
package mg.alpha.gestion.operations.shared.ui.desktop.outlines.pages.forms.operations;

import java.math.BigDecimal;
import java.util.Map;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import mg.alpha.gestion.operations.shared.services.code.DeviseCodeType;
import mg.alpha.gestion.operations.shared.services.code.TypeLitteralCodeType;
import mg.alpha.gestion.operations.shared.services.lookup.compte.CompteLookupCall;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class EditerOperationsFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public EditerOperationsFormData() {
  }

  public CompteOperation getCompteOperation() {
    return getFieldByClass(CompteOperation.class);
  }

  public CoursApplique getCoursApplique() {
    return getFieldByClass(CoursApplique.class);
  }

  public DateOperation getDateOperation() {
    return getFieldByClass(DateOperation.class);
  }

  public Designation getDesignation() {
    return getFieldByClass(Designation.class);
  }

  public DeviseGroup getDeviseGroup() {
    return getFieldByClass(DeviseGroup.class);
  }

  /**
   * access method for property EditerOperationsNr.
   */
  public Long getEditerOperationsNr() {
    return getEditerOperationsNrProperty().getValue();
  }

  /**
   * access method for property EditerOperationsNr.
   */
  public void setEditerOperationsNr(Long editerOperationsNr) {
    getEditerOperationsNrProperty().setValue(editerOperationsNr);
  }

  public EditerOperationsNrProperty getEditerOperationsNrProperty() {
    return getPropertyByClass(EditerOperationsNrProperty.class);
  }

  public MontantOperation getMontantOperation() {
    return getFieldByClass(MontantOperation.class);
  }

  public TypeAllLitteralGroup getTypeAllLitteralGroup() {
    return getFieldByClass(TypeAllLitteralGroup.class);
  }

  public static class CompteOperation extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;

    public CompteOperation() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.LOOKUP_CALL, CompteLookupCall.class);
      ruleMap.put(ValidationRule.ZERO_NULL_EQUALITY, true);
    }
  }

  public static class CoursApplique extends AbstractValueFieldData<BigDecimal> {

    private static final long serialVersionUID = 1L;

    public CoursApplique() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_VALUE, new BigDecimal("999999999999999999999999999999999999999999999999999999999999"));
      ruleMap.put(ValidationRule.MIN_VALUE, new BigDecimal("-999999999999999999999999999999999999999999999999999999999999"));
    }
  }

  public static class DateOperation extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public DateOperation() {
    }
  }

  public static class Designation extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public Designation() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class DeviseGroup extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public DeviseGroup() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.CODE_TYPE, DeviseCodeType.class);
    }
  }

  public static class EditerOperationsNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;

    public EditerOperationsNrProperty() {
    }
  }

  public static class MontantOperation extends AbstractValueFieldData<BigDecimal> {

    private static final long serialVersionUID = 1L;

    public MontantOperation() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_VALUE, new BigDecimal("999999999999999999999999999999999999999999999999999999999999"));
      ruleMap.put(ValidationRule.MIN_VALUE, new BigDecimal("-999999999999999999999999999999999999999999999999999999999999"));
    }
  }

  public static class TypeAllLitteralGroup extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public TypeAllLitteralGroup() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.CODE_TYPE, TypeLitteralCodeType.class);
    }
  }
}